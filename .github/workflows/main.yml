on: [push]
jobs:
  pull-dataset-from-prometheus:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      
      - name: cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ~/
          key:  dependencies-v3
          
      # Installing dependencies
      - name: install requirements.txt
        run: |
          sudo apt-get install python3-dev  python3-numpy python3-scipy libpq-dev gcc libpqxx-dev gfortran libblas3 liblapack3 liblapack-dev libblas-dev libatlas-base-dev
          pip install Cmake
          pip install -r requirements.txt
          
      # Getting new datasets
      - name: getting dataset from prometheus
        run: |
          python src/prom2csv.py
          
          
  train-linear-model:
    needs: pull-dataset-from-prometheus
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      
      - name: cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ~/
          key:  dependencies-v3
          
      # Installing dependencies
      - name: install requirements.txt
        run: |
          sudo apt-get install python3-dev  python3-numpy python3-scipy libpq-dev gcc libpqxx-dev gfortran libblas3 liblapack3 liblapack-dev libblas-dev libatlas-base-dev
          pip install Cmake
          pip install -r requirements.txt

      # Train models
      - name: getting dataset from prometheus
        run: |
          rm -rf src/__pycache__
          python src/train.py -m linear


  train-svr-model:
    needs: pull-dataset-from-prometheus
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      
      - name: cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ~/
          key:  dependencies-v3

      # Installing dependencies
      - name: install requirements.txt
        run: |
          sudo apt-get install python3-dev  python3-numpy python3-scipy libpq-dev gcc libpqxx-dev gfortran libblas3 liblapack3 liblapack-dev libblas-dev libatlas-base-dev
          pip install Cmake
          pip install -r requirements.txt

      # training SVR model
      - name: training SVR model
        run: |
          rm -rf src/__pycache__
          python src/train.py -m svr



  select-best-model:
    needs: 
      - train-linear-model
      - train-svr-model
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      
      - name: cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ~/
          key:  dependencies-v3

      # Installing dependencies
      - name: install requirements.txt
        run: |
          sudo apt-get install python3-dev  python3-numpy python3-scipy libpq-dev gcc libpqxx-dev gfortran libblas3 liblapack3 liblapack-dev libblas-dev libatlas-base-dev
          pip install Cmake
          pip install -r requirements.txt

      # training SVR model
      - name: Selecting best models in Postgres
        run: |
          rm -rf src/__pycache__
          python src/save_best_model.py
          
          
  deploy-on-target:
      # needs: select-best-model
      name: SCP files to server
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@master
      
        - name: SCP files via ssh key
          uses: appleboy/scp-action@master
          with:
            USERNAME: ${{ secrets.USERNAME }}
            HOST: ${{ secrets.HOSTNAME }}
            KEY: ${{ secrets.SSH_DEPLOY_KEY }}
            source: './src/*'
            target: '/home/${{ secrets.USERNAME }}/dist/'
            
        - name: Run backend server
          run: |
            echo ${{ secrets.SSH_DEPLOY_KEY }} >> test.test
            cat test.test 
            # echo ${{ secrets.SSH_DEPLOY_KEY }} | ssh -i /dev/stdin ${{ secrets.HOSTNAME }}@${{ secrets.HOSTNAME }} 'pkill -9 -f cpu-predictor-server.py'
            # echo ${{ secrets.SSH_DEPLOY_KEY }} | ssh -i /dev/stdin ${{ secrets.HOSTNAME }}@${{ secrets.HOSTNAME }} '~/env/bin/python3 ~/dist/src/cpu-predictor-server.py &>/dev/null &'

 
